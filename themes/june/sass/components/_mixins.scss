// Animation mixins for reuse across components

@mixin fade-in-up($delay: 0s) {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease $delay, transform 0.8s ease $delay;

    &.animate {
        opacity: 1;
        transform: translateY(0);
    }
}

@mixin fade-in-left($delay: 0s) {
    opacity: 0;
    transform: translateX(-30px);
    transition: opacity 0.8s ease $delay, transform 0.8s ease $delay;

    &.animate {
        opacity: 1;
        transform: translateX(0);
    }
}

@mixin fade-in-right($delay: 0s) {
    opacity: 0;
    transform: translateX(30px);
    transition: opacity 0.8s ease $delay, transform 0.8s ease $delay;

    &.animate {
        opacity: 1;
        transform: translateX(0);
    }
}

@mixin stagger-animation($base-delay: 0.2s, $stagger: 0.2s) {
    @for $i from 1 through 3 {
        &:nth-child(#{$i}) {
            @include fade-in-up($base-delay + ($i - 1) * $stagger);
        }
    }
}

@mixin scale-in($delay: 0s) {
    opacity: 0;
    transform: scale(0.8);
    transition: opacity 0.6s ease $delay, transform 0.6s ease $delay;

    &.animate {
        opacity: 1;
        transform: scale(1);
    }
}
