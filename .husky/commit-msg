#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Commit message validation for conventional commits
# Format: type(scope?): subject
# Types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert

commit_msg_file=$1
commit_msg=$(cat "$commit_msg_file")

# Skip merge commits
if echo "$commit_msg" | grep -qE "^Merge"; then
    exit 0
fi

# Skip revert commits
if echo "$commit_msg" | grep -qE "^Revert"; then
    exit 0
fi

# Conventional commit pattern
pattern='^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .{1,}'

if ! echo "$commit_msg" | grep -qE "$pattern"; then
    echo "‚ùå Invalid commit message format!"
    echo ""
    echo "üìã Commit message must follow Conventional Commits format:"
    echo "   <type>(<scope>): <subject>"
    echo ""
    echo "Types:"
    echo "  feat:     A new feature"
    echo "  fix:      A bug fix"
    echo "  docs:     Documentation only changes"
    echo "  style:    Code style changes (formatting, missing semi colons, etc)"
    echo "  refactor: Code change that neither fixes a bug nor adds a feature"
    echo "  perf:     Performance improvements"
    echo "  test:     Adding or updating tests"
    echo "  build:    Changes to build system or dependencies"
    echo "  ci:       Changes to CI configuration files and scripts"
    echo "  chore:    Other changes that don't modify src or test files"
    echo "  revert:   Reverts a previous commit"
    echo ""
    echo "Examples:"
    echo "  feat(auth): add user login functionality"
    echo "  fix(page-builder): canvas height responsive to viewport"
    echo "  docs: update README with installation steps"
    echo ""
    exit 1
fi

exit 0

